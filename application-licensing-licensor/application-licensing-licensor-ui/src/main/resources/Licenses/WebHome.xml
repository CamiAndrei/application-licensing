<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Licenses.WebHome" locale="">
  <web>Licenses</web>
  <name>WebHome</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1473254709000</creationDate>
  <parent>Main.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1474967182000</date>
  <contentUpdateDate>1474964797000</contentUpdateDate>
  <version>1.1</version>
  <title>Licensed Extensions</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{include reference="Licenses.Code.VelocityMacros" /}}

{{velocity output="false"}}
#macro (displayLicensesLiveTable)
  {{html clean="false"}}
  &lt;fieldset class="header"&gt;
    &lt;legend&gt;$services.localization.render('licensor.licenseManager.heading')&lt;/legend&gt;
    $services.localization.render('licensor.licenseManager.hint')
  &lt;/fieldset&gt;
  {{/html}}
  #set ($columns = ['name', 'version', 'status', 'userLimit', 'wiki', 'actions'])
  #set ($columnsProperties = {
    'name': {'filterable': false, 'sortable': false},
    'version': {'filterable': false, 'sortable': false},
    'status': {'filterable': false, 'sortable': false, 'html': true},
    'userLimit': {'filterable': false, 'sortable': false, 'html': true},
    'wiki': {'filterable': false, 'sortable': false},
    'actions': {'filterable': false, 'sortable': false, 'html': true}
  })
  #set ($options = {
    'resultPage':'Licenses.Code.LicenseJSON',
    'translationPrefix' : 'licensor.',
    'extraParams': "&amp;showAllPaidExtensions=$!escapetool.url($request.showAllPaidExtensions)"
  })
  #livetable('licenseManager' $columns $columnsProperties $options)
#end

#macro (displayAddLicenseForm)
  {{html clean=false}}
  &lt;form id="addLicense" class="xform half" action="$xwiki.getURL('Licenses.Code.AddLicense', 'get',
      'outputSyntax=plain')" method="post"&gt;
    &lt;fieldset class="header"&gt;
      &lt;legend&gt;$services.localization.render('licensor.addLicense.heading')&lt;/legend&gt;
      &lt;p&gt;$services.localization.render('licensor.addLicense.hint')&lt;/p&gt;
      &lt;textarea name="license" id="license" rows="5"&gt;&lt;/textarea&gt;
      &lt;input class="btn btn-success" type="submit" value="Add License"&gt;
    &lt;/fieldset&gt;
  &lt;/form&gt;
  {{/html}}
#end
{{/velocity}}

{{velocity}}
## The licensor UI is a dependency of the licensor API which needs to be installed on farm. The licensor UI should be
## accessible only from the main wiki but we can't limit its installation to the main wiki so we need to check here if
## we are on the main wiki.
#if (!$xcontext.isMainWiki())
  {{info}}
  $services.localization.render('licensor.unavailableOnSubWiki', ['[[', "&gt;&gt;path:#getLicensesAdminSectionURL]]"])
  {{/info}}
#elseif (!$hasAdmin || !$hasProgramming)
  {{error}}
  $services.localization.render('licensor.accessDenied')
  {{/error}}
#else
  #set ($discard = $xwiki.ssx.use('Licenses.WebHome'))
  #set ($discard = $xwiki.jsx.use('Licenses.WebHome'))
  #displayOwnerDetailsForm
  #displayLicensesLiveTable
  #displayAddLicenseForm
#end
{{/velocity}}</content>
  <object>
    <name>Licenses.WebHome</name>
    <number>0</number>
    <className>XWiki.ConfigurableClass</className>
    <guid>2bf591dd-14b3-4247-a12c-25eacfd523c8</guid>
    <class>
      <name>XWiki.ConfigurableClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <categoryIcon>
        <customDisplay/>
        <disabled>0</disabled>
        <name>categoryIcon</name>
        <number>11</number>
        <picker>0</picker>
        <prettyName>categoryIcon</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </categoryIcon>
      <codeToExecute>
        <customDisplay/>
        <disabled>0</disabled>
        <editor>Text</editor>
        <name>codeToExecute</name>
        <number>7</number>
        <picker>0</picker>
        <prettyName>codeToExecute</prettyName>
        <rows>5</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </codeToExecute>
      <configurationClass>
        <customDisplay/>
        <disabled>0</disabled>
        <name>configurationClass</name>
        <number>3</number>
        <picker>0</picker>
        <prettyName>configurationClass</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </configurationClass>
      <configureGlobally>
        <customDisplay/>
        <defaultValue/>
        <disabled>0</disabled>
        <displayFormType>checkbox</displayFormType>
        <displayType/>
        <name>configureGlobally</name>
        <number>4</number>
        <prettyName>configureGlobally</prettyName>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </configureGlobally>
      <displayBeforeCategory>
        <customDisplay/>
        <disabled>0</disabled>
        <name>displayBeforeCategory</name>
        <number>10</number>
        <picker>0</picker>
        <prettyName>displayBeforeCategory</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </displayBeforeCategory>
      <displayInCategory>
        <customDisplay/>
        <disabled>0</disabled>
        <name>displayInCategory</name>
        <number>9</number>
        <picker>0</picker>
        <prettyName>displayInCategory</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </displayInCategory>
      <displayInSection>
        <customDisplay/>
        <disabled>0</disabled>
        <name>displayInSection</name>
        <number>1</number>
        <picker>0</picker>
        <prettyName>displayInSection</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </displayInSection>
      <heading>
        <customDisplay/>
        <disabled>0</disabled>
        <name>heading</name>
        <number>2</number>
        <picker>0</picker>
        <prettyName>heading</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </heading>
      <iconAttachment>
        <customDisplay/>
        <disabled>0</disabled>
        <name>iconAttachment</name>
        <number>8</number>
        <picker>0</picker>
        <prettyName>iconAttachment</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </iconAttachment>
      <linkPrefix>
        <customDisplay/>
        <disabled>0</disabled>
        <name>linkPrefix</name>
        <number>5</number>
        <picker>0</picker>
        <prettyName>linkPrefix</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </linkPrefix>
      <propertiesToShow>
        <cache>0</cache>
        <customDisplay/>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>propertiesToShow</name>
        <number>6</number>
        <picker>0</picker>
        <prettyName>propertiesToShow</prettyName>
        <relationalStorage>1</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>20</size>
        <sort>none</sort>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <values/>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </propertiesToShow>
      <sectionOrder>
        <customDisplay/>
        <disabled>0</disabled>
        <name>sectionOrder</name>
        <number>12</number>
        <numberType>integer</numberType>
        <prettyName>sectionOrder</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <classType>com.xpn.xwiki.objects.classes.NumberClass</classType>
      </sectionOrder>
    </class>
    <property>
      <categoryIcon/>
    </property>
    <property>
      <codeToExecute>{{include reference="Licenses.WebHome" /}}</codeToExecute>
    </property>
    <property>
      <configurationClass/>
    </property>
    <property>
      <configureGlobally>1</configureGlobally>
    </property>
    <property>
      <displayBeforeCategory/>
    </property>
    <property>
      <displayInCategory>extensionmanager</displayInCategory>
    </property>
    <property>
      <displayInSection>Licenses</displayInSection>
    </property>
    <property>
      <heading/>
    </property>
    <property>
      <iconAttachment/>
    </property>
    <property>
      <linkPrefix/>
    </property>
    <property>
      <propertiesToShow/>
    </property>
    <property>
      <sectionOrder>600</sectionOrder>
    </property>
  </object>
  <object>
    <name>Licenses.WebHome</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>a4052124-0472-4347-814d-7f000605e118</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require(['jquery', 'xwiki-events-bridge'], function ($) {
  var addLicense = function(licenseData) {
    var addLicense = $('#addLicense');
    var addLicenseSubmit = addLicense.find("input[type='submit']");
    $.post({
      url : new XWiki.Document('AddLicense', 'Licenses.Code').getURL('get', 'outputSyntax=plain'),
      data: licenseData,
      beforeSend: function() {
        this.progressNotification =
          new XWiki.widgets.Notification("$services.localization.render('licensor.addLicense.adding')", 'inprogress');
        addLicenseSubmit.prop('disabled', true);
        // Remove the previous error message.
        addLicense.next('.errormessage').remove();
      },
      complete:function(result) {
        if (result.responseJSON) {
          this.progressNotification.replace(new XWiki.widgets.Notification(result.responseJSON.notification,
            result.responseJSON.status));
        } else {
          this.progressNotification.hide();
        }
        addLicenseSubmit.prop('disabled', false);
      },
      success: function() {
        timeoutReload();
      },
      error: function(result) {
        var errorMessage = result.responseJSON ? result.responseJSON.notification :
        $jsontool.serialize($services.localization.render('licensor.addLicense.nonJSON'));
        $('&lt;div class="box errormessage"/&gt;').text(errorMessage).insertAfter(addLicense);
      }
    });
  };
  var checkSubmit = function(ownerDetailsForm) {
    // check the input fields to be filled with data
    var doSubmit = true;
    var focus = true;
    ownerDetailsForm.find('input:visible').each(function() {
      $(this).removeClass('required');
      if (!$(this).val()) {
        // Focus on first element that needs to be filled with data
        if (focus) {
          $(this).focus();
          focus = false;
        }
        doSubmit = false;
        $(this).addClass('required');
        $(this).attr('placeholder', "${services.localization.render('licensor.ownerDetails.missingData')}");
      }
    });
    return doSubmit;
  };
  var computeHasTrialKey = function(instanceId, featureId) {
    return instanceId + '_' + featureId;
  };
  // Remove "Extend Trial" buttons from livetable, if the trial licenses limits were reached
  var updateLivetableButtons = function() {
    var instanceId = $('#instanceId').val();
    $('.licenseActions .btn-primary').each(function() {
      // compute the key to check in the localStorage
      var dataButton = JSON.parse($(this).attr('data-button'));
      var featureId = dataButton.featureId;
      var hasTrialsKey = computeHasTrialKey(instanceId, featureId);
      // The value is stored as a string in the local storage.
      if (localStorage.getItem(hasTrialsKey) === 'false') {
        // remove the "Extend Trial" button
        $(this).remove();
      }
    });
  };
  // Reload the page if all the trial license requests get a response
  var timeoutReload = function() {
    setTimeout(function() {
      if (countTrialRequests === 0) {
        // Reload the livetable
        if ($.type(livetable_licenseManager.refresh) === 'function')
        {
          // Available for XWiki version &gt;= 9.5RC1
          livetable_licenseManager.refresh();
        } else {
          var end = livetable_licenseManager.limit;
          var start = Math.max(livetable_licenseManager.lastOffset, 1);
          livetable_licenseManager.clearCache();
          livetable_licenseManager.getRows(start, end, start, end);
        }
      }
    }, 1000);
  };
  // We use a counter to be sure that all the requests get a response, before reloading the page.
  var countTrialRequests = 0;
  $(document).ready(function() {
    // xwiki:livetable:loadingComplete might be triggered before the code from this jsx is executed. In this case, the
    // livetable is also loaded before, because it is using Prototype.js which is loading before the page loads.
    // Make sure that the livetable is loaded by checking for a row with some data.
    if ($('#licenseManager-display td.type').size() &gt; 0) {
      updateLivetableButtons();
    }
    $(document).on('xwiki:livetable:loadingComplete', updateLivetableButtons);
    $("#addLicense").submit(function(event) {
      event.preventDefault();
      addLicense($(this).serialize());
    });
    // Manages the license buttons from the licenses livetable. If a trial is requested, it is automatically generated
    // and installed, else the user is redirected to a page to buy a license. 
    $('#licenseManager').on('click', '.licenseButton', function() {
      var currentButton = $(this);
      var ownerDetailsForm = $('#ownerDetails');
      if (checkSubmit(ownerDetailsForm)) {
        // Make licenseActions buttons inactive when any of them is clicked
        currentButton.parent().children().prop('disabled', true);
        // update the licensing owner details
        $.post({
          url : new XWiki.Document('UpdateOwnerDetails', 'Licenses.Code').getURL('get', 'outputSyntax=plain'),
          data: $(ownerDetailsForm).serialize()
        });
        // get the data from the button
        var dataButton = JSON.parse(currentButton.attr('data-button'));
        var isTrial = dataButton.licenseType === 'TRIAL';
        var formData = ownerDetailsForm.serializeArray();

        $.each(dataButton, function(indexName, indexValue) {
          var detailInput = $('input[name=' + indexName + ']');
          // check if the input exists
          if (detailInput.val()) {
            detailInput.val(indexValue);
          } else {
            if (isTrial) {
              // add the extension related data to the queryString used in the Ajax request
              formData.push({name: indexName, value: indexValue});
            } else {
              // append the data to the buy form
              ownerDetailsForm.append("&lt;input type='hidden' name='" + indexName + "' value='" + indexValue + "'&gt;");
            }
          }
        });
        // for the trial version, we use an ajax request to check if the number of trials hasn't been reached and
        // return a license if needed.
        if (isTrial) {
          $.post({
            url : new XWiki.Document('GetTrialLicenseService', 'Licenses.Code').getURL('get', 'outputSyntax=plain'),
            data: $.param(formData),
            beforeSend: function() {
              countTrialRequests ++;
              this.progressNotification = new XWiki.widgets.Notification(
                "$services.localization.render('licensor.addLicense.gettingTrialLicense')", 'inprogress');
            },
            complete: function() {
              countTrialRequests --;
              if (countTrialRequests &lt;= 0) {
                // Re-enable the buttons if there's no pending license request.
                currentButton.parent().children().prop('disabled', false);
              }
            },
            success: function(result) {
              // Cache the "hasTrials" value in local storage.
              var licenseData = $.param({'license': result.data});
              var urlParams = new URLSearchParams(this.data);
              var hasTrialsKey = computeHasTrialKey(urlParams.get('instanceId'), urlParams.get('featureId'));
              var hasTrialValue = result.hasTrials;
              localStorage.setItem(hasTrialsKey, hasTrialValue);
              // Hide the "Extend Trial" button if "hasTrials" is false.
              if (hasTrialValue === false) {
                currentButton.hide();
              }
              this.progressNotification.hide();
              addLicense(licenseData);
            },
            error: function(result) {
              if(result.responseJSON) {
                this.progressNotification.replace(
                  new XWiki.widgets.Notification(result.responseJSON.data,result.responseJSON.status));
              } else {
                this.progressNotification.replace(
                  new XWiki.widgets.Notification("$services.localization.render('licensor.addLicense.nonJSON')",
                    'error'));
              }
            }
          });
        } else if(dataButton.licenseType === 'PAID') {
          // Buy a license
          ownerDetailsForm.submit();
        }
      }
    });
  });
});</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
  <object>
    <name>Licenses.WebHome</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>48861c06-ca38-4072-812c-422b75c0e776</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>#ownerDetails input.required {
  border:1px solid red;
}

#addLicense + .errormessage {
  margin-top: .7em;
}</code>
    </property>
    <property>
      <contentType>CSS</contentType>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
</xwikidoc>
